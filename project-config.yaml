project:
  name: bitx-config
  repository: github.com/bitx-sh/config
  description: Advanced configuration loader and generator CLI with plugin system
  version: 0.0.1
  license: MIT

architecture:
  type: monorepo
  packages:
    core:
      name: "@bitx-sh/config"
      type: cli-application
      responsibilities:
        - Schema loading and validation
        - Configuration generation
        - Plugin management
        - CLI interface
        - Interactive prompts
    plugins:
      - name: "@bitx-sh/plugin-biome"
        phase: 1
        schema: json
      - name: "@bitx-sh/plugin-vite"
        phase: 2
        schema: typescript
      - name: "@bitx-sh/plugin-github"
        phase: 3
        schema: yaml
      - name: "@bitx-sh/plugin-renovate"
        phase: 4
        schema: json

dependencies:
  runtime:
    core:
      - citty # CLI framework
      - consola # Logging/prompts
      - c12 # Config loading
      - unconfig # Config resolution
      - zod # Schema validation
      - quicktype # Schema conversion
      - mlly # Module loading
      - knitwork # Code generation
      - std-env # Environment detection
      - pkg-types # Package.json handling
      - pathe # Path handling
      - scule # String manipulation
    build:
      - unbuild # Library building
      - unimport # Auto-imports
  development:
    - "@biomejs/biome" # Linting/formatting
    - typescript # Type checking
    - changelogen # Changelog
    - simple-git-hooks # Git hooks
    - lint-staged # Pre-commit checks
    - publint # Package validation
    - knip # Dependency checking

features:
  schema:
    supported_formats:
      - json-schema
      - openapi
      - typescript
      - zod
    conversion:
      internal_format: zod
      library: quicktype

  plugin_system:
    sources:
      - npm_scoped: "@bitx-sh/plugin-*"
      - npm_global: "bitx-plugin-*"
      - local: "packages/bitx-plugin-*"
      - github: "github:*/bitx-plugin-*"
    lifecycle:
      - discovery
      - validation
      - initialization
      - execution
      - cleanup

  configuration:
    sources:
      - cli_arguments
      - environment_variables
      - configuration_files
      - remote_sources
      - user_prompts
    merge_strategy: c12_defu
    output_formats:
      - json
      - yaml
      - typescript
      - javascript

cli:
  commands:
    init:
      description: Initialize new configuration
      options:
        - name: type
          flag: -t
          description: Configuration type
        - name: output
          flag: -o
          description: Output file
    validate:
      description: Validate existing configuration
    migrate:
      description: Migrate between formats
    docs:
      description: Generate documentation

roadmap:
  phase1:
    name: MVP with Biome
    features:
      - Basic CLI structure
      - Core schema handling
      - Plugin system foundation
      - Biome schema support
      - Interactive prompts
      - Basic validation

  phase2:
    name: Complex Schema Support
    features:
      - Vite/Bun configuration
      - Nested schema handling
      - Advanced validation
      - Schema references
      - Multiple source merging

  phase3:
    name: YAML and Remote Support
    features:
      - GitHub Actions support
      - YAML handling
      - Remote schema fetching
      - Improved documentation
      - Schema caching

  phase4:
    name: Advanced Features
    features:
      - Renovate configuration
      - Complex validation rules
      - Migration tools
      - Schema inference
      - Performance optimization

development:
  standards:
    - TypeScript strict mode
    - Biome linting rules
    - Comprehensive testing
    - Twoslash documentation

  testing:
    frameworks:
      - bun test
    types:
      - unit
      - integration
      - e2e
      - snapshot

  documentation:
    tools:
      - twoslash
      - undocs
      - automd
    formats:
      - API reference
      - Usage guides
      - Plugin development
      - Schema authoring
